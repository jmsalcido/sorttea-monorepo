# Generated by Django 5.1.6 on 2025-03-06 03:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("instagram", "__first__"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Giveaway",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("ended", "Ended"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("prize_description", models.TextField()),
                ("winner_count", models.PositiveIntegerField(default=1)),
                (
                    "instagram_account_to_follow",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "instagram_post_to_like",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "instagram_post_to_comment",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("required_tag_count", models.PositiveIntegerField(default=0)),
                ("verify_follow", models.BooleanField(default=True)),
                ("verify_like", models.BooleanField(default=True)),
                ("verify_comment", models.BooleanField(default=False)),
                ("verify_tags", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_giveaways",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Entry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("instagram_username", models.CharField(max_length=255)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("verified", "Verified"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("verification_details", models.JSONField(default=dict)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instagram_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="giveaway_entries",
                        to="instagram.instagramaccount",
                    ),
                ),
                (
                    "giveaway",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="giveaway.giveaway",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VerificationRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("rule_type", models.CharField(max_length=50)),
                ("rule_params", models.JSONField(default=dict)),
                ("is_required", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "giveaway",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_rules",
                        to="giveaway.giveaway",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Winner",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("selected_at", models.DateTimeField(auto_now_add=True)),
                ("contacted", models.BooleanField(default=False)),
                ("contacted_at", models.DateTimeField(blank=True, null=True)),
                ("prize_claimed", models.BooleanField(default=False)),
                ("claimed_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "entry",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="winner",
                        to="giveaway.entry",
                    ),
                ),
                (
                    "giveaway",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="winners",
                        to="giveaway.giveaway",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("entry_created", "Entry Created"),
                            ("entry_verified", "Entry Verified"),
                            ("entry_failed", "Entry Failed"),
                            ("winner_selected", "Winner Selected"),
                            ("winner_contacted", "Winner Contacted"),
                            ("prize_claimed", "Prize Claimed"),
                            ("verification_rule_created", "Verification Rule Created"),
                            ("verification_rule_updated", "Verification Rule Updated"),
                            ("giveaway_created", "Giveaway Created"),
                            ("giveaway_updated", "Giveaway Updated"),
                            ("giveaway_status_changed", "Giveaway Status Changed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("action_details", models.JSONField(default=dict)),
                ("object_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "object_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["action_type"], name="giveaway_au_action__770049_idx"
                    ),
                    models.Index(
                        fields=["object_type", "object_id"],
                        name="giveaway_au_object__b94ce7_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="giveaway_au_timesta_49110f_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="entry",
            index=models.Index(
                fields=["giveaway", "verification_status"],
                name="giveaway_en_giveawa_928900_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="entry",
            index=models.Index(
                fields=["instagram_username"], name="giveaway_en_instagr_fc315c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="entry",
            unique_together={("giveaway", "instagram_username")},
        ),
    ]
